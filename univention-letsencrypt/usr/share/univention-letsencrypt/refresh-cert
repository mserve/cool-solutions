#!/bin/bash -e
#
# Copyright 2016-2018 Univention GmbH
#
# http://www.univention.de/
#
# All rights reserved.
#
# The source code of this program is made available
# under the terms of the GNU Affero General Public License version 3
# (GNU AGPL V3) as published by the Free Software Foundation.
#
# Binary versions of this program provided by Univention to you as
# well as other copyrighted, protected or trademarked materials like
# Logos, graphics, fonts, specific documentations and configurations,
# cryptographic keys etc. are subject to a license agreement between
# you and Univention and not subject to the GNU AGPL V3.
#
# In the case you use this program under the terms of the GNU AGPL V3,
# the program is provided in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the
# GNU Affero General Public License for more details.
#
# You should have received a copy of the GNU Affero General Public
# License with the Debian GNU/Linux or Univention distribution in file
# /usr/share/common-licenses/AGPL-3; if not, see
# <http://www.gnu.org/licenses/>.

. /usr/share/univention-lib/ucr.sh

DIR_LE="/etc/univention/letsencrypt"

if [ ! "$(id -un)" = "letsencrypt" ] ; then
    echo "ERROR: please restart this script as user 'letsencrypt'."
    exit 1
fi

cleanup () {
    set +e
    [ -n "$TMPFN" -a -f "$TMPFN" ] && rm -f "$TMPFN"
}
trap cleanup EXIT
TMPFN="$(mktemp --tmpdir="$DIR_LE")"

date
echo "Refreshing certificate for following domains:"
cat  "$DIR_LE/domains"

if is_ucr_true letsencrypt/staging ; then
  useStaging="--directory-url https://acme-staging-v02.api.letsencrypt.org/directory"
fi

# get new signed certificate
/usr/share/univention-letsencrypt/acme_tiny.py --disable-check ${useStaging} --account-key "$DIR_LE/account.key" --csr "$DIR_LE/domain.csr" --acme-dir "/var/www/.well-known/acme-challenge/" > "$TMPFN"

if ! is_ucr_true letsencrypt/staging ; then
# on success (script didn't stop) use correct filename
mv -f "$TMPFN" "$DIR_LE/signed_chain.crt"
chmod 0644 "$DIR_LE/signed_chain.crt"

# create backup
cp "$DIR_LE/signed_chain.crt" "$DIR_LE/signed_chain.crt_$(date +%Y%m%d-%H%M%S)"

echo "Certificate refreshed at $(date)"

else
echo "Certificate refreshed at $(date) from the staging endpoint. You can now deactivate the staging option in Let's Encrypt's app settings to get a valid certificate."
fi
